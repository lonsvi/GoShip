<Application x:Class="GoShip.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GoShip"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Цвета -->
            <SolidColorBrush x:Key="Button.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="Button.Border" Color="#FFABABAB"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="TextColor" Color="#FF000000"/>
            <SolidColorBrush x:Key="BorderColor" Color="#FFABABAB"/>

            <!-- Стиль для кнопок -->
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="10" 
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- Анимация масштабирования -->
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Анимация масштабирования кнопок -->
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle1}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" 
                                                 To="1.05" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" 
                                                 To="1.05" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" 
                                                 To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" 
                                                 To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <!-- Стиль для текстовых полей -->
            <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="#FFFFFFFF"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="10">
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              HorizontalAlignment="Stretch" 
                                              VerticalAlignment="Stretch" 
                                              Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Стиль для пароля -->
            <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
                <Setter Property="Background" Value="#FFFFFFFF"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="10">
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              HorizontalAlignment="Stretch" 
                                              VerticalAlignment="Stretch" 
                                              Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Стиль для карточек (Rectangle) -->
            <Style x:Key="RectangleStyle1" TargetType="{x:Type Rectangle}">
                <Setter Property="Stroke" Value="{StaticResource BorderColor}"/>
                <Setter Property="StrokeThickness" Value="1"/>
                <Setter Property="Fill" Value="#FFFFFFFF"/>
                <Setter Property="RadiusX" Value="10"/>
                <Setter Property="RadiusY" Value="10"/>
            </Style>

            <!-- Анимация появления -->
            <Style x:Key="FadeInStyle" TargetType="{x:Type FrameworkElement}">
                <Setter Property="Opacity" Value="0"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="20"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                 From="0" To="1" Duration="0:0:0.5"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" 
                                                 From="20" To="0" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
